<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-23T12:02:01 IST" name="Default suite" finished-at="2024-08-23T12:10:14 IST" duration-ms="493196">
    <groups>
    </groups>
    <test started-at="2024-08-23T12:02:01 IST" name="Default test" finished-at="2024-08-23T12:10:14 IST" duration-ms="493196">
      <class name="smoke_suite.ALC_258">
        <test-method is-config="true" signature="generateAndroidBenefitname()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateAndroidBenefitname" finished-at="2024-08-23T12:02:01 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateAndroidBenefitname -->
        <test-method is-config="true" signature="generateBenefitName()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateBenefitName" finished-at="2024-08-23T12:02:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateBenefitName -->
        <test-method is-config="true" signature="generateBenefitOrderName()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateBenefitOrderName" finished-at="2024-08-23T12:02:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateBenefitOrderName -->
        <test-method is-config="true" signature="generateBonusName()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateBonusName" finished-at="2024-08-23T12:02:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateBonusName -->
        <test-method is-config="true" signature="generateBranchMemberName()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateBranchMemberName" finished-at="2024-08-23T12:02:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateBranchMemberName -->
        <test-method is-config="true" signature="generateBranchName()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateBranchName" finished-at="2024-08-23T12:02:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateBranchName -->
        <test-method is-config="true" signature="generateBrandName()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateBrandName" finished-at="2024-08-23T12:02:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateBrandName -->
        <test-method is-config="true" signature="generateRandomBranchMemberNumber()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateRandomBranchMemberNumber" finished-at="2024-08-23T12:02:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateRandomBranchMemberNumber -->
        <test-method is-config="true" signature="generateRandomLastName()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateRandomLastName" finished-at="2024-08-23T12:02:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateRandomLastName -->
        <test-method is-config="true" signature="generateRandomNumber()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="generateRandomNumber" finished-at="2024-08-23T12:02:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateRandomNumber -->
        <test-method is-config="true" signature="setup()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:01 IST" name="setup" finished-at="2024-08-23T12:02:32 IST" duration-ms="30827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createdata()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:02:32 IST" name="createdata" description="Create a member, branch, processor and a bonus with the same branch and processor" finished-at="2024-08-23T12:03:05 IST" duration-ms="32987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createdata -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:03:05 IST" name="afterMethod" finished-at="2024-08-23T12:03:05 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createdata status=SUCCESS method=ALC_258.createdata()[pri:0, instance:smoke_suite.ALC_258@50313382] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="checkalchemy()[pri:1, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:03:05 IST" name="checkalchemy" description="Go the branch and take note of branch details:- 1) KG recycled, 2) Active members, 3) Members Registered and 4) Tokens in wallet." finished-at="2024-08-23T12:03:34 IST" duration-ms="29146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkalchemy -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:03:34 IST" name="afterMethod" finished-at="2024-08-23T12:03:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkalchemy status=SUCCESS method=ALC_258.checkalchemy()[pri:1, instance:smoke_suite.ALC_258@50313382] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="dotransactions()[pri:2, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:03:34 IST" name="dotransactions" description="Login into branch and buy materials from member" finished-at="2024-08-23T12:06:45 IST" duration-ms="190520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotransactions -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:06:45 IST" name="afterMethod" finished-at="2024-08-23T12:06:45 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dotransactions status=SUCCESS method=ALC_258.dotransactions()[pri:2, instance:smoke_suite.ALC_258@50313382] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="selltoprocessor()[pri:3, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:06:45 IST" name="selltoprocessor" description="Sell material 1 to processor with receipt and material 2 to processor without receipt." finished-at="2024-08-23T12:08:33 IST" duration-ms="108316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selltoprocessor -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:08:33 IST" name="afterMethod" finished-at="2024-08-23T12:08:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selltoprocessor status=SUCCESS method=ALC_258.selltoprocessor()[pri:3, instance:smoke_suite.ALC_258@50313382] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifytransactions()[pri:4, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:08:33 IST" name="verifytransactions" description="Go to branch and processor one by one to check transaction details." finished-at="2024-08-23T12:10:14 IST" duration-ms="100975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifytransactions -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:10:14 IST" name="afterMethod" finished-at="2024-08-23T12:10:14 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifytransactions status=SUCCESS method=ALC_258.verifytransactions()[pri:4, instance:smoke_suite.ALC_258@50313382] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardownalchemy()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:10:14 IST" name="teardownalchemy" finished-at="2024-08-23T12:10:14 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownalchemy -->
        <test-method is-config="true" signature="teardownapp()[pri:0, instance:smoke_suite.ALC_258@50313382]" started-at="2024-08-23T12:10:14 IST" name="teardownapp" finished-at="2024-08-23T12:10:14 IST" duration-ms="148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardownapp -->
      </class> <!-- smoke_suite.ALC_258 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
